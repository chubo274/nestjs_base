// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum UserStatus {
    ACTIVE
    DELETED
    BANNED
}

enum UserRole {
    ADMIN
    CUSTOMER
    EMPLOYEE
}

enum OtpAction {
    LOGIN
}

model User {
    id              Int        @id @default(autoincrement())
    username        String?    @map("user_name") @db.VarChar(255)
    password        String?
    lastAccessToken String?
    isVerifyOtp     Boolean    @default(false) @map("is_verify_otp")
    lastName        String?    @map("last_name") @db.VarChar(255)
    firstName       String?    @map("first_name") @db.VarChar(255)
    phoneCode       String?    @map("phone_code") @db.VarChar(255)
    phone           String?    @db.VarChar(255)
    email           String?    @db.VarChar(255)
    role            UserRole   @default(CUSTOMER)
    status          UserStatus @default(ACTIVE)
    cid             String?
    depositAdsFee   Float      @default(0) @map("desposit_ads_fee")
    avatar          String?    @db.VarChar(255)
    createdAt       DateTime   @default(now()) @map("created_at")
    updatedAt       DateTime   @default(now()) @updatedAt @map("updated_at")
    // relation
    Otp             Otp[]
    Role            Role?      @relation(fields: [roleId], references: [id])
    roleId          Int?

    @@fulltext([username, email, phone, firstName, lastName])
    @@map("user")
}

model Role {
    id         Int          @id @default(autoincrement())
    roleName   String?      @map("role_name")
    createdAt  DateTime     @default(now()) @map("created_at")
    updatedAt  DateTime     @default(now()) @updatedAt @map("updated_at")
    // relation fields
    Permission Permission[]
    User       User[]

    @@map("role")
}

model Permission {
    id             Int      @id @default(autoincrement())
    permissionName String   @map("permission_name")
    roleId         Int
    role           Role     @relation(fields: [roleId], references: [id])
    feature        String
    createdAt      DateTime @default(now()) @map("created_at")
    updatedAt      DateTime @default(now()) @updatedAt @map("updated_at")
    // relation fields

    @@map("permission")
}

model Otp {
    id        Int       @id @default(autoincrement())
    action    OtpAction
    userId    Int?      @map("user_id")
    phone     String?
    phoneCode String?   @map("phone_code")
    email     String?   @map("email")
    code      String
    isUsed    Int       @default(0) @map("is_used")
    expiredAt DateTime  @map("expired_at")
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime  @default(now()) @updatedAt @map("updated_at")

    // relation fields
    user User? @relation(fields: [userId], references: [id])

    @@map("otp")
}

model NotificationLogs {
    id        Int      @id @default(autoincrement())
    title     String
    type      String
    isRead    Boolean  @default(false) @map("is_read")
    createdAt DateTime @default(now()) @map("created_at")
    updatedAt DateTime @default(now()) @updatedAt @map("updated_at")

    @@map("notification_logs")
}
